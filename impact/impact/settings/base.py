"""
Django settings for Portail RSE project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path

import dj_database_url
from corsheaders.defaults import default_headers
from csp.constants import NONCE
from csp.constants import SELF
from csp.constants import UNSAFE_INLINE
from django.core.exceptions import ImproperlyConfigured

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ["SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DJANGO_DEBUG", "False") == "True"

ROOT_URLCONF = "impact.urls"
WSGI_APPLICATION = "impact.wsgi.application"
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "0.0.0.0,127.0.0.1").split(",")

# Application definition
INSTALLED_APPS = [
    "api",
    "entreprises",
    "habilitations",
    "metabase",
    "public",
    "reglementations",
    "users",
    "utils",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "django_vite",
    "anymail",
    "corsheaders",
]
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    # ajout d'informations à l'utilisateur juste après l'identification
    "utils.middlewares.ExtendUserMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # middlewares touchant à l'utilisation d'HTMX
    "utils.middlewares.HTMXRequestMiddleware",
    "utils.middlewares.HTMXRetargetMiddleware",
]
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "entreprises.context_processors.current_entreprise",
                "utils.context_processors.custom_settings",
            ],
        },
    },
]

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
METABASE = os.getenv("METABASE_DATABASE_URL")
METABASE_DATABASE_NAME = "metabase"

DATABASES = {
    "default": dj_database_url.config("DATABASE_URL"),
    METABASE_DATABASE_NAME: dj_database_url.config(
        "METABASE_DATABASE_URL" if METABASE else "DATABASE_URL"
    ),
}

DATABASE_ROUTERS = ["impact.db_routers.MetabaseRouter"]

# Storages
MEDIA_ROOT = Path(BASE_DIR, "media")
MEDIA_URL = "media/"
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}
if os.getenv("S3_STORAGE"):
    access_key = os.getenv("SCALEWAY_S3_ACCESS_KEY")
    secret_key = os.getenv("SCALEWAY_S3_SECRET_KEY")
    if not access_key or not secret_key:
        raise ImproperlyConfigured("Missing S3 credentials")
    region_name = os.getenv("SCALEWAY_S3_BUCKET_REGION")
    bucket_name = os.getenv("SCALEWAY_S3_BUCKET_NAME")
    endpoint_url = os.getenv(
        "SCALEWAY_S3_ENDPOINT_URL", f"https://s3.{region_name}.scw.cloud"
    )
    STORAGES["default"] = {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
            "access_key": access_key,
            "secret_key": secret_key,
            "bucket_name": bucket_name,
            "region_name": region_name,
            "endpoint_url": endpoint_url,
        },
    }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {
            "min_length": 12,
        },
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "impact.password_validation.CompositionPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
LANGUAGE_CODE = "fr-FR"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Sessions
# https://docs.djangoproject.com/en/4.2/topics/http/sessions/

# Cookie expiration : 2h
SESSION_COOKIE_AGE = 2 * 60 * 60

# Via HTTPS only
SESSION_COOKIE_SECURE = True

# Session expires when browser is closed
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

COOKIE_DOMAIN = os.getenv("COOKIE_DOMAIN", "")

# SameSite :
# must be "Strict", other sites do not need to see session cookies
# TO BE CONFIRMED ...
# see: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value
# SESSION_COOKIE_SAMESITE = "Strict"

# Django-vite configuration for static files build with vite
# https://github.com/MrBin99/django-vite
DJANGO_VITE_ASSETS_PATH = Path(BASE_DIR, "static", "svelte")
DJANGO_VITE_DEV_MODE = DEBUG
DJANGO_VITE_MANIFEST_PATH = Path(DJANGO_VITE_ASSETS_PATH, "manifest.json")
DJANGO_VITE_DEV_SERVER_PORT = 5173
DJANGO_VITE_STATIC_URL_PREFIX = "svelte"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_ROOT = Path(BASE_DIR, "static_collected")
STATIC_URL = "/static/"
STATICFILES_DIRS = (Path(BASE_DIR, "static"),)

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Users
AUTH_USER_MODEL = "users.User"
LOGIN_URL = "/connexion"
LOGIN_REDIRECT_URL = "/tableau-de-bord"
LOGOUT_REDIRECT_URL = "/"

# API
API_SIRENE_KEY = os.getenv("API_SIRENE_KEY")
API_ANALYSE_IA_BASE_URL = os.getenv("API_ANALYSE_IA_BASE_URL")
API_ANALYSE_IA_TOKEN = os.getenv("API_ANALYSE_IA_TOKEN", "")

# Matomo :
# Matomo can be disabled for DEV environments,
# and needs a special CSP configuration.
MATOMO_DISABLED = os.getenv("MATOMO_DISABLED") == "true"

# CSP :
# https://django-csp.readthedocs.io/en/latest
# - enabled on deployed apps
# - configuration in v4.0 format
# - can dynamically switch to "report-only" mode or disabled with `CSP_MODE` env-var
# see : https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy

# CSP_MODE : csp | csp-report-only | disabled
# - enabled, in "normal" mode (default)
# - enabled, in "report-only" mode (fine-tuning, non-blocking)
# - disabled (dev, if needed)
CSP_MODE = os.getenv("CSP_MODE") or "csp"

# CSP configuration base : same for CSP and report-only.
CSP_CONFIGURATION = {
    "DIRECTIVES": {
        "default-src": [
            SELF,
            "sentry.incubateur.net",
        ],
        "script-src": [
            SELF,
            "stats.portail-rse.beta.gouv.fr",
        ],
        "script-src-attr": [
            SELF,
            "stats.portail-rse.beta.gouv.fr",
        ],
        "frame-src": [
            SELF,
            "stats.portail-rse.beta.gouv.fr",
        ],
        "font-src": [
            SELF,
            "data:",  # Tarte au citron
        ],
        "script-src-elem": [
            SELF,
            NONCE,
            # matomo :
            "stats.beta.gouv.fr",
        ],
        "img-src": [
            SELF,
            "data:",  # some images are defined this way
            # matomo :
            "stats.beta.gouv.fr",
            # S3 scaleway :
            "sites-faciles.s3.fr-par.scw.cloud",
        ],
        "style-src": [
            SELF,
            UNSAFE_INLINE,  # stats: iframe
        ],
        "connect-src": [
            SELF,
            "sentry.incubateur.net",
            # matomo :
            "stats.beta.gouv.fr",
        ],
    },
}


# Either CSP or CSP report-only is enabled, not both
match CSP_MODE:
    case "disabled":
        # nothing to do
        ...
    case "csp-report-only":
        CONTENT_SECURITY_POLICY_REPORT_ONLY = CSP_CONFIGURATION
    case "csp":
        CONTENT_SECURITY_POLICY = CSP_CONFIGURATION
    case _:
        raise ImproperlyConfigured(
            f"Incorrect CSP_MODE: '{CSP_MODE}' (must be one of: csp | csp-report-only | disabled)."
        )

if CSP_MODE != "disabled":
    # register django-csp app
    INSTALLED_APPS.append("csp")
    MIDDLEWARE.append("csp.middleware.CSPMiddleware")


# Sites-faciles:
# URL of sites-faciles instance for Portail RSE
SITES_FACILES_BASE_URL = os.getenv(
    "SITES_FACILES_BASE_URL", "https://portail-rse.beta.gouv.fr"
)

# Élargissement autorisation CORS pour sites-faciles
# sert pour le menu qui est téléchargé depuis le site de gestion
CORS_ALLOWED_ORIGINS = [SITES_FACILES_BASE_URL]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = (*default_headers, "hx-current-url")
